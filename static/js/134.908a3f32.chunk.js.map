{"version":3,"file":"static/js/134.908a3f32.chunk.js","mappings":"0OA4EA,UAnEe,WAAO,IAADA,EACbC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAiC,QAA5BlB,EAAGO,EAAaY,IAAI,gBAAQ,IAAAnB,EAAAA,EAAI,IAE3CoB,EAAAA,EAAAA,YAAU,WAER,GADAP,EAAUK,GACK,KAAXN,EAAe,CAAC,IAEHS,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAvB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BC,EAAAA,EAAAA,IAAU,GAADC,OAjBzB,iCAkBMA,OAjBL,gBAiBiBA,OAhBhB,4CAgB6B,WAAAA,OAAUpB,IAC9C,KAAD,EAFa,OAARS,EAAQO,EAAAK,KAAAL,EAAAE,KAAA,EAIYT,EAASa,KAAKC,QAAQC,KAAI,SAAAC,GAClD,MAAO,CACLC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MAEb,IAAG,KAAD,EALIvB,EAAWY,EAAAK,KAMjBhB,EAAeD,GAAaY,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAE5Ba,QAAQC,IAAGd,EAAAY,IAAQ,yBAAAZ,EAAAe,OAAA,GAAAlB,EAAA,mBAEtB,kBAhBsB,OAAAH,EAAAsB,MAAC,KAADC,UAAA,KADvBxB,GAkBF,CAEF,GAAG,CAACT,IASJ,OACEkC,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,WAAY,GACZC,cAAe,IACfC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOnC,EAAOoC,SAdX,SAAAjB,GACxB,GAAuB,KAAnBA,EAAEkB,OAAOF,MACX,OAAO7C,EAAgB,CAAEU,MAAOmB,EAAEkB,OAAOF,QAE3C7C,EAAgB,CAAC,EACnB,KAUI2C,EAAAA,EAAAA,KAAA,UAAQK,QAAS,kBAAM3C,EAAUK,EAAM,EAACgC,SAAC,WACxB,KAAhBlC,IACCmC,EAAAA,EAAAA,KAAA,MAAAD,SACGlC,EAAYoB,KAAI,SAAAC,GACf,OACEc,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAEHC,GAAE,GAAA1B,OAAKK,EAAEC,IACTqB,MAAO,CAAEC,KAAM3D,GACf4D,UAAU,aAAYX,UAEtBC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAYX,SAAEb,EAAEE,SALzBF,EAAEC,GAQb,QAKV,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst GET_VALUE = 'search/movie';\nconst MY_API_KEY = '?api_key=c511c78146d5adcdbcb48d13d0273853';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState('');\n  const [foundMovies, setFoundMovies] = useState('');\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    setSearch(query);\n    if (search !== '') {\n      response();\n      async function response() {\n        try {\n          const response = await axios.get(\n            `${BASE_URL}${GET_VALUE}${MY_API_KEY}&query=${search}`\n          );\n\n          const foundMovies = await response.data.results.map(e => {\n            return {\n              id: e.id,\n              title: e.title,\n            };\n          });\n          setFoundMovies(foundMovies);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const updateQueryString = e => {\n    if (e.target.value !== '') {\n      return setSearchParams({ query: e.target.value });\n    }\n    setSearchParams({});\n  };\n\n  return (\n    <div\n      style={{\n        paddingTop: 15,\n        paddingBottom: 15,\n      }}\n    >\n      <input type=\"text\" value={query} onChange={updateQueryString} />\n      <button onClick={() => setSearch(query)}>Search</button>\n      {foundMovies !== '' && (\n        <ul>\n          {foundMovies.map(e => {\n            return (\n              <Link\n                key={e.id}\n                to={`${e.id}`}\n                state={{ from: location }}\n                className=\"moviesLink\"\n              >\n                <li className=\"moviesList\">{e.title}</li>\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["_searchParams$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","search","setSearch","_useState3","_useState4","foundMovies","setFoundMovies","query","get","useEffect","response","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_response","_foundMovies","_context","prev","next","axios","concat","sent","data","results","map","e","id","title","t0","console","log","stop","apply","arguments","_jsxs","style","paddingTop","paddingBottom","children","_jsx","type","value","onChange","target","onClick","Link","to","state","from","className"],"sourceRoot":""}